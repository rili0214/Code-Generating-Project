{
    "clang_tidy": {
        "command": "clang-tidy temp/code_files/temp_code_a0fe0487-fff4-42b0-889e-be3bcc0a5ce3.cpp --checks=*,-clang-diagnostic*-warning -- -Werror",
        "errors": [],
        "file": "temp/code_files/temp_code_a0fe0487-fff4-42b0-889e-be3bcc0a5ce3.cpp",
        "return_code": 0,
        "status": "success",
        "warnings": []
    },
    "evaluation_score": {
        "final_score": 10,
        "stsatic_analysis": 10
    },
    "generated_code": "#include<algorithm>\n#include<vector>\n#include<iostream>\nusing namespace std;\n\nvector<bool> prime;\n\nvoid prime_set(int n){\n  prime.resize(n + 1, true);\n  prime[0] = prime[1] = false;\n  for(int i = 2; i * i <= n; i++){\n    if(prime[i]){\n      for(int j = i * i; j <= n; j += i){\n        prime[j] = false;\n      }\n    }\n  }\n}\n\nint solve(int a, int b, int n){\n  int count = 0;\n  while(count < n && a < prime.size()){\n    if(prime[a]){\n      count++;\n    }\n    a += b;\n  }\n  return a - b;\n}\n\nint main(){\n  prime_set(10000000);\n  int a, b, n;\n  while(cin >> a >> b >> n && a != 0 && b != 0 && n != 0){\n    cout << solve(a, b, n) << endl;\n  }\n}",
    "model": "qwen"
}