[
    {
        "mode": "mode_2",
        "code": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint height[] = new int[10];\n\t\tfor(int i=0;i<height.length;i++){\n\t\t\ttry {\n\t\t\t\theight[i] = Integer.parseInt(br.readLine());\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\t// TODO ????????????????????? catch ????????????\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (IOException e) {\n\t\t\t\t// TODO ????????????????????? catch ????????????\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\t\n\t\tArrays.sort(height);\n\t\t\n\t\tfor(int i=0;i<3;i++){\n\t\t\tSystem.out.println(height[height.length-i-1]);\n\t\t}\n\t\t\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString str = null;\n\n\t\twhile((str = br.readLine()) != null) {\n\t\t\tString[] num = str.split(\" \");\n\t\t\tint a = Integer.parseInt(num[0]);\n\t\t\tint b = Integer.parseInt(num[1]);\n\n\t\t\tint digitnum = String.valueOf(a + b).length();\n\t\t\tSystem.out.println(digitnum);\n\t\t}\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner=new Scanner(System.in);\n\t\tint N=scanner.nextInt();\n\t\tint T[]=new int[3];\n\t\tfor(int i=0;i<N;i++){\n\t\t\tfor(int j=0;j<3;j++)\n\t\t\t\tT[j]=scanner.nextInt();\n\t\t\tArrays.sort(T);\n\t\t\tif(T[0]*T[0]+T[1]*T[1]==T[2]*T[2]){\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.io.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\ttry {\n\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tString t[], s;\n\t\t\tint a[] = new int[2];\n\t\t\tint c;\n\t\t\twhile((s = reader.readLine())  != null) {\n\t\t\t\tt = s.split(\" \");\n\t\t\t\tfor(int i = 0;i < a.length;i++) {\n\t\t\t\t\ta[i] = Integer.parseInt(t[i]);\n\t\t\t\t}\n\t\t\t\tint a0_tmp = a[0], a1_tmp = a[1];\n\t\t\t\twhile(true) {\n\t\t\t\t\tc = a0_tmp % a1_tmp;\n\t\t\t\t\tif(c == 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\ta0_tmp = a1_tmp;\n\t\t\t\t\ta1_tmp = c;\n\t\t\t\t}\n\t\t\t\tSystem.out.printf(\"%d %d\\n\", a1_tmp, a[0]/a1_tmp*a[1]);\n\n\t\t\t}\n\n\t\t}\n\t\tcatch(IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString n = scanner.next();\n\n\t\tStringBuffer sb = new StringBuffer(n);\n\t\tString dst = sb.reverse().toString();\n\t\tSystem.out.println(dst);\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t@SuppressWarnings(\"resource\")\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint weekNum = sc.nextInt();\n\n\t\tint debt = 100000;\n\t\tint roundUpNum = 1000;\n\n\t\tfor (int i = 0; i < weekNum; i++) {\n\t\t\tdebt *= 1.05;\n\n\t\t\tdebt = (int) Math.ceil((double) debt / roundUpNum) * roundUpNum;\n\t\t}\n\t\tSystem.out.println(debt);\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.Scanner;\nclass Main{\n\tpublic static void main(String[]agrs){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint x = sc.nextInt();\n\t\tint y = sc.nextInt();\n\t\tSystem.out.println(gcd(x,y));\n\t}\n\tstatic int gcd(int x, int y){\n\t\tif(y == 0){\n\t\t\treturn x;\n\t\t}else{\n\t\t\treturn gcd(y, x % y);\n\t\t}\n\t}\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\n\nclass Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tString n = br.readLine();\n\n\t\tString nums;\n\n\t\tint count=0;\n\t\tfor(int i=0; i<Integer.parseInt(n); i++){\n\t\t\t nums = br.readLine();\n\t\t\tif(new BigInteger(nums).isProbablePrime(10)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(count);\n\n\t}\n\n}",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.Deque;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String args[]){\n\t\tnew Main().mainrun();\n\t}\n\n\tprivate Scanner scan;\n\tprivate Deque<String> d;\n\tprivate String str;\n\n\tprivate void mainrun() {\n\t\tscan = new Scanner(System.in);\n\n\t\td = new LinkedList<>();\n\n\t\twhile(scan.hasNext()) {\n\t\t\tstr = scan.next();\n\n\t\t\tswitch(str) {\n\t\t\tcase \"+\":\n\t\t\tcase \"-\":\n\t\t\tcase \"*\":\n\t\t\t\td.push(Calculation(Long.parseLong(d.pop()),\n\t\t\t\t\t\t\t\t   Long.parseLong(d.pop()),\n\t\t\t\t\t\t\t\t   str).toString());\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\td.push(str);\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(d.pop());\n\t\tscan.close();\n\t}\n\n\tprivate Long Calculation(long x,long y,String c) {\n\t\tswitch(c) {\n\t\tcase \"+\":\n\t\t\treturn y + x;\n\t\tcase \"-\":\n\t\t\treturn y - x;\n\t\tcase \"*\":\n\t\t\treturn y * x;\n\t\t}\n\t\treturn (long) 0;\n\t}\n}\n\n",
        "language": "Java"
    },
    {
        "mode": "mode_2",
        "code": "import java.util.Scanner;\nimport java.util.LinkedList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tLinkedList<String> processes = new LinkedList<>();\n\t\tint numProcesses = scanner.nextInt();\n\t\tint quantum = scanner.nextInt();\n\t\tint timestamp = 0;\n\t\tString result = \"\";\n\t\t//get all processes from scanner\n\t\tscanner.nextLine();\n\t\tfor (int i = 0; i < numProcesses; i++) {\n\t\t\tprocesses.add(scanner.nextLine());\n\t\t}\n\t\tscanner.close();\n\t\t\n\t\twhile (!processes.isEmpty()) {\n\t\t\t//parse process\n\t\t\tString[] process = processes.remove().split(\" \");\n\t\t\tString name = process[0];\n\t\t\tint timeLeft = Integer.parseInt(process[1]);\n\t\t\t\n\t\t\t//decrement time left and add back to queue if necessary\n\t\t\tif (timeLeft-quantum > 0) {\n\t\t\t\tprocesses.add(name + \" \" + (timeLeft-quantum));\n\t\t\t\ttimestamp += quantum;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttimestamp += timeLeft;\n\t\t\t\tSystem.out.println(name + \" \" + (timestamp));\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "language": "Java"
    }
]